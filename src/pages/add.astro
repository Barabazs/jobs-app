---
import { db, Openings } from "astro:db";
import Layout from "../layouts/Layout.astro";

let errorMessage = "";
let successMessage = "";

if (Astro.request.method === "POST") {
  // parse form data
  const formData = await Astro.request.formData();
  const jobname = formData.get("vacancy");
  const joburl = formData.get("url");
  const jobcategory = formData.get("jobcategory");
  const jobdescription = formData.get("jobdescription");
  const joblocation = formData.get("joblocation");
  const companyname = formData.get("company");
  const companyurl = formData.get("companyurl");
  const companycategory = formData.get("companycategory");
  const wallet = formData.get("wallet");

  if (
    typeof jobname === "string" &&
    typeof joburl === "string" &&
    typeof companyname === "string" &&
    typeof jobcategory === "string" &&
    typeof wallet === "string"
  ) {
    try {
      await db.insert(Openings).values({
        // @ts-ignore
        wallet,
        jobname,
        joburl,
        jobcategory,
        jobdescription,
        joblocation,
        companyname,
        companyurl,
        companycategory
      });
      successMessage = "Success! Thanks for adding a vacancy.";
    } catch (error) {
      if (
        error instanceof Error &&
        error.message.includes(
          "SQL_QUERY_FAILED: Openings.companyname, Openings.jobname"
        )
      ) {
        errorMessage =
          "An error occurred while adding the job listing: this seems to be a duplicate entry.";
      } else {
        errorMessage =
          "An error occurred while adding the job listing. Please try again.";
      }
    }
  } else {
    console.log("Invalid form data ", formData);
    errorMessage = "Please fill out all required fields correctly.";
  }
}

// render the new list of comments on each request
//const listings = await db.select().from(Openings);
---

<Layout title="Admin.">
  <section>
    <div
      class="relative flex justify-center max-h-full overflow-hidden lg:px-0 md:px-12"
    >
      <div class="hidden bg-white lg:block lg:flex-1 lg:relative sm:contents">
        <div class="absolute inset-0 object-cover w-full h-full bg-white">
          <img
            class="object-center h-full object-cover bg-gray-200 grayscale hover:grayscale-0 duration-500"
            src="https://images.unsplash.com/photo-1461685265823-f8d5d0b08b9b?q=80&w=2340&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
            alt=""
            width="1310"
            height="873"
          />
        </div>
      </div>
      <div
        class="relative z-10 flex flex-col flex-1 px-4 py-10 bg-white lg:border-r lg:py-24 md:flex-none md:px-28 sm:justify-center"
      >
        <div
          class="w-full max-w-md mx-auto md:max-w-sm md:px-0 md:w-96 sm:px-4"
        >
          <div class="flex flex-col">
            <h1 class="text-3xl font-semibold tracking-tighter text-gray-900">
              Add a new #privacy job listing,
              <span class="text-gray-600">help us grow the movement</span>
            </h1>
            <p class="mt-4 text-base font-medium text-gray-500">
              More jobs means more people can join the movement. Help us grow by
              adding a new job listing.
            </p>
          </div>
          <div class="mt-8">
            <button
              id="wallet"
              class="inline-flex items-center justify-center w-full h-12 gap-3 px-5 py-3 font-medium text-white duration-200 bg-gray-900 rounded-xl hover:bg-gray-700 focus:ring-2 focus:ring-offset-2 focus:ring-black"
              type="button"
              aria-label="Sign in with Wallet"
            >
              <span>Connect Wallet</span>
            </button>
            <div class="relative py-3">
              <div
                class="absolute inset-0 flex items-center"
                aria-hidden="true"
              >
                <div class="w-full border-t border-gray-300"></div>
              </div>
              <div class="relative flex justify-center">
                <span class="px-2 text-sm text-black bg-white"
                  >and fill the form</span
                >
              </div>
            </div>
          </div>
          <form method="POST">
            <input type="hidden" name="wallet" id="wallet" required />

            {
              errorMessage && (
                <div class="mt-4 p-4 border-l-4 border-red-500 bg-red-50 rounded-r-lg flex items-center space-x-4">
                  <div class="flex-shrink-0">
                    <svg
                      class="h-5 w-5 text-red-400"
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 20 20"
                      fill="currentColor"
                      aria-hidden="true"
                    >
                      <path
                        fill-rule="evenodd"
                        d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
                        clip-rule="evenodd"
                      />
                    </svg>
                  </div>
                  <div class="flex-1 md:flex md:justify-between">
                    <p class="text-sm text-red-700">{errorMessage}</p>
                  </div>
                </div>
              )
            }

            {
              successMessage && (
                <div class="mt-4 p-4 border-l-4 border-green-500 bg-green-50 rounded-r-lg flex items-center space-x-4">
                  <div class="flex-shrink-0">
                    <svg
                      class="h-5 w-5 text-green-400"
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 20 20"
                      fill="currentColor"
                      aria-hidden="true"
                    >
                      <path
                        fill-rule="evenodd"
                        d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                        clip-rule="evenodd"
                      />
                    </svg>
                  </div>
                  <div class="flex-1 md:flex md:justify-between">
                    <p class="text-sm text-green-700">{successMessage}</p>
                  </div>
                </div>
              )
            }
            <div class="space-y-3">
              <div>
                <label
                  for="vacancy"
                  class="block mb-3 text-sm font-medium text-black"
                >
                  Vacancy <span class="text-red-500">*</span>
                </label>
                <input
                  type="text"
                  id="vacancy"
                  name="vacancy"
                  placeholder="Job name"
                  class="block w-full h-12 px-4 py-2 text-gray-500 duration-200 border rounded-lg appearance-none bg-chalk border-zinc-300 placeholder-zinc-300 focus:border-zinc-300 focus:outline-none focus:ring-zinc-300 sm:text-sm"
                  required
                />
              </div>
              <div>
                <label
                  for="jobcategory"
                  class="block mb-3 text-sm font-medium text-black"
                >
                  Category <span class="text-red-500">*</span>
                </label>
                <select
                  name="jobcategory"
                  id="jobcategory"
                  class="block w-full h-12 px-4 py-2 text-gray-500 duration-200 border rounded-lg appearance-none bg-chalk border-zinc-300 placeholder-zinc-300 focus:border-zinc-300 focus:outline-none focus:ring-zinc-300 sm:text-sm"
                  required
                >
                  <option value="" disabled selected>Select a category</option>
                  <option value="Engineering">Engineering</option>
                  <option value="Marketing">Marketing</option>
                  <option value="Security">Security</option>
                  <option value="Product">Product</option>
                  <option value="Cryptography">Cryptography</option>
                  <option value="Operations">Operations</option>
                  <option value="Other">Other</option>
                </select>
              </div>
              <div class="col-span-full">
                <label
                  for="url"
                  class="block mb-3 text-sm font-medium text-black"
                >
                  Link <span class="text-red-500">*</span>
                </label>
                <input
                  id="url"
                  name="url"
                  class="block w-full h-12 px-4 py-2 text-gray-500 duration-200 border rounded-lg appearance-none bg-chalk border-zinc-300 placeholder-zinc-300 focus:border-zinc-300 focus:outline-none focus:ring-zinc-300 sm:text-sm"
                  placeholder="An URL link to the job posting"
                  type="url"
                  required
                />
              </div>
              <div class="col-span-full">
                <label
                  for="company"
                  class="block mb-3 text-sm font-medium text-black"
                >
                  Company Name <span class="text-red-500">*</span>
                </label>
                <input
                  id="company"
                  name="company"
                  class="block w-full h-12 px-4 py-2 text-gray-500 duration-200 border rounded-lg appearance-none bg-chalk border-zinc-300 placeholder-zinc-300 focus:border-zinc-300 focus:outline-none focus:ring-zinc-300 sm:text-sm"
                  placeholder="Name of your company"
                  type="text"
                  required
                />
              </div>
              <div class="col-span-full">
                <label
                  for="companyurl"
                  class="block mb-3 text-sm font-medium text-black"
                >
                  Company Link <span class="text-red-500">*</span>
                </label>
                <input
                  id="companyurl"
                  name="companyurl"
                  class="block w-full h-12 px-4 py-2 text-gray-500 duration-200 border rounded-lg appearance-none bg-chalk border-zinc-300 placeholder-zinc-300 focus:border-zinc-300 focus:outline-none focus:ring-zinc-300 sm:text-sm"
                  placeholder="An URL link to your website"
                  type="url"
                  required
                />
              </div>
              <div class="col-span-full">
                <button
                  id="submit"
                  type="submit"
                  disabled
                  class="inline-flex items-center justify-center w-full h-12 gap-3 px-5 py-3 font-medium text-white disabled:text-gray-300 duration-200 bg-gray-900 disabled:bg-gray-100 rounded-xl hover:bg-gray-700 focus:ring-2 focus:ring-offset-2 focus:ring-black"
                >
                  Add Job Listing
                </button>
              </div>
            </div>
            <div class="mt-6">
              <p
                class="flex mx-auto text-sm font-medium leading-tight text-center text-black"
              >
                No wallet?
                <a
                  class="ml-auto text-gray-500 hover:text-black"
                  href="https://bento.me/brume"
                >
                  Get Brume
                </a>
              </p>
            </div>
          </form>
        </div>
      </div>
    </div>
  </section>
  <script>
    import { createThirdwebClient } from "thirdweb";
    import {
      createWallet,
      injectedProvider,
      walletConnect
    } from "thirdweb/wallets";

    async function handleClick() {
      const client = createThirdwebClient({
        clientId: "bf33b44326574712844423ec500dcce7"
      });

      const metamask = createWallet("io.metamask"); // pass the wallet id

      async function connect() {
        // if user has metamask installed, connect to it
        if (injectedProvider("io.metamask")) {
          return await metamask.connect({ client });
        }

        // open wallet connect modal so user can scan the QR code and connect
        else {
          return await metamask.connect({
            client,
            walletConnect: { showQrModal: true }
          });
        }
      }

      const account = await connect();
      if (account.address) {
        document.getElementById("wallet")!.textContent = "Connected";
        const walletInput = document.querySelector(
          "input[name=wallet]"
        ) as HTMLInputElement;
        walletInput.value = account.address;
        const submitButton = document.getElementById(
          "submit"
        ) as HTMLButtonElement;
        submitButton.disabled = false;
      }
    }
    document.getElementById("wallet")!.addEventListener("click", handleClick);
  </script>
</Layout>

<!--render `comments`-->
